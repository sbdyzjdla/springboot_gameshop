buildscript {
	ext {
		queryDslVersion = "4.4.0"
	}
}

plugins {
	id 'org.springframework.boot' version '2.4.1'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
}

group = 'com.travel.record'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	jcenter()
	maven { url 'https://jitpack.io' }
}

dependencies {
	implementation 'junit:junit:4.12'
	compile('org.springframework.boot:spring-boot-starter-web')

	compile('org.projectlombok:lombok')
	annotationProcessor 'org.projectlombok:lombok'

	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-mustache')
	//implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	compile('com.h2database:h2')

	compile('org.springframework.session:spring-session-jdbc')

	compile("org.mariadb.jdbc:mariadb-java-client")

	compile('org.springframework.boot:spring-boot-starter-oauth2-client')
	compile("org.mariadb.jdbc:mariadb-java-client")

	compile('org.springframework.boot:spring-boot-devtools')

	implementation group: 'com.github.iamport', name: 'iamport-rest-client-java', version: '0.2.15'

	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')
	testCompileOnly 'org.projectlombok:lombok:1.18.12' // 테스트 의존성 추가
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.12' // 테스트 의존성 추가

	// QueryDSL
	compile("com.querydsl:querydsl-core") // querydsl
	compile("com.querydsl:querydsl-jpa") // querydsl
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa" // querydsl JPAAnnotationProcessor 사용 지정
	annotationProcessor("jakarta.persistence:jakarta.persistence-api")
	annotationProcessor("jakarta.annotation:jakarta.annotation-api")

}

test {
	useJUnitPlatform()
}

//Q Class generated
def generated='src/main/generated'
sourceSets {
	main.java.srcDirs += [ generated ]
}

tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = file(generated)
}

clean.doLast {
	file(generated).deleteDir()
}